#ifndef CPU_H_
#define CPU_H_

#include <map>
#include <memory>

#include "Memory.h"

class Cpu {
   public:
    Cpu();
    void connectMemory(std::unique_ptr<Memory> memory);
    std::unique_ptr<Memory> disconnectMemory();
    void printPage(unsigned char page);
    void printStatus();
    void reset();
    void step();
    void run();

   private:
    std::unique_ptr<Memory> memory_;
    unsigned short int PC_;
    unsigned char SP_;
    unsigned char AC_;
    unsigned char X_;
    unsigned char Y_;
    unsigned char SR_;  // NV-BDIZC
    std::map<unsigned char, void (*)()> operationMapper_;
    void printMemoryError();
    unsigned char getFlag(char flag);
    void setFlag(char flag, unsigned char bit);
    unsigned short int abs();
    unsigned short int absX();
    unsigned short int absY();
    unsigned short int ind();
    unsigned short int Xind();
    unsigned short int indY();
    unsigned short int rel();
    unsigned short int zpg();
    unsigned short int zpgX();
    unsigned short int zpgY();
    void _00();
    void _01();
    void _05();
    void _06();
    void _08();
    void _09();
    void _0A();
    void _0D();
    void _0E();
    void _10();
    void _11();
    void _15();
    void _16();
    void _18();
    void _19();
    void _1D();
    void _1E();
    void _20();
    void _21();
    void _24();
    void _25();
    void _26();
    void _28();
    void _29();
    void _2A();
    void _2C();
    void _2D();
    void _2E();
    void _30();
    void _31();
    void _35();
    void _36();
    void _38();
    void _39();
    void _3D();
    void _3E();
    void _40();
    void _41();
    void _45();
    void _46();
    void _48();
    void _49();
    void _4A();
    void _4C();
    void _4D();
    void _4E();
    void _50();
    void _51();
    void _55();
    void _56();
    void _58();
    void _59();
    void _5D();
    void _5E();
    void _60();
    void _61();
    void _65();
    void _66();
    void _68();
    void _69();
    void _6A();
    void _6C();
    void _6D();
    void _6E();
    void _70();
    void _71();
    void _75();
    void _76();
    void _78();
    void _79();
    void _7D();
    void _7E();
    void _81();
    void _84();
    void _85();
    void _86();
    void _88();
    void _8A();
    void _8C();
    void _8D();
    void _8E();
    void _90();
    void _91();
    void _94();
    void _95();
    void _96();
    void _98();
    void _99();
    void _9A();
    void _9D();
    void _A0();
    void _A1();
    void _A2();
    void _A4();
    void _A5();
    void _A6();
    void _A8();
    void _A9();
    void _AA();
    void _AC();
    void _AD();
    void _AE();
    void _B0();
    void _B1();
    void _B4();
    void _B5();
    void _B6();
    void _B8();
    void _B9();
    void _BA();
    void _BC();
    void _BD();
    void _BE();
    void _C0();
    void _C1();
    void _C4();
    void _C5();
    void _C6();
    void _C8();
    void _C9();
    void _CA();
    void _CC();
    void _CD();
    void _CE();
    void _D0();
    void _D1();
    void _D5();
    void _D6();
    void _D8();
    void _D9();
    void _DD();
    void _DE();
    void _E0();
    void _E1();
    void _E4();
    void _E5();
    void _E6();
    void _E8();
    void _E9();
    void _EA();
    void _EC();
    void _ED();
    void _EE();
    void _F0();
    void _F1();
    void _F5();
    void _F6();
    void _F8();
    void _F9();
    void _FD();
    void _FE();
};

#endif  // !CPU_H_
